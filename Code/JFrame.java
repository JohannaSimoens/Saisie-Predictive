
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 * Classe qui s'occupe de l'interface graphique et du déroulement du programme global (contient la méthode main qui éxecute
 * tout le programme
 * 
 */
public class JFrame extends javax.swing.JFrame {
        
        /**
         * Le mot en cours de saisie
         */
	String mot; 
        
        /**
         * l'arbre qu'on créée avec notre corpus
         */
	MiseEnPlaceArbre notreArbre; 
        
        /**
         * la liste des mots (ou plutôt des caractères consécutifs séparés par deux espaces) entrés dans l'ordre
         */
	ArrayList<String> motsEntres; 
        
        /**
         * tableau de boutons avec les différentes propositions
         */
	JButton[] tabBoutons; 
        
        /**
         * tableau de labels pour afficher les propositions et leur degrès de fréquence
         */
	JLabel[] labels; 
        
        /**
         * indique si l'utilisateur vient juste de supprimer un espace ou non
         */
	boolean espaceSupprime; 
        
        /**
         * la liste de bigramme de notre corpus
         */
	Bigramme bigramme; 
        
        /**
         * la liste de trigramme de notre corpus
         */
	Trigramme trigramme; 

	/**
	 * Constructeur de JFrame qui crée l'arbre et les listes de bigrammes et trigrammes à partir du corpus
	 */
	public JFrame() throws IOException {

		mot = "";
		motsEntres = new ArrayList<String>();
		notreArbre = new MiseEnPlaceArbre(("corpusSMS.txt"));
		LectureTexte lT = new LectureTexte("corpusSMS.txt");
		String texteNettoye = lT.getTexteNettoye();
		

		bigramme = new Bigramme(texteNettoye);
		trigramme = new Trigramme(texteNettoye);

		bigramme.nombreDeMotsSuivants = 8;
		trigramme.nombreDeMotsSuivants = 8;

		espaceSupprime = false;
		initComponents();
		tabBoutons = new JButton[9];
		tabBoutons[0] = jButton1;
		tabBoutons[1] = jButton2;
		tabBoutons[2] = jButton3;
		tabBoutons[3] = jButton4;
		tabBoutons[4] = jButton5;
		tabBoutons[5] = jButton6;
		tabBoutons[6] = jButton7;
		tabBoutons[7] = jButton8;
		tabBoutons[8] = jButton9;
		labels = new JLabel[9];
		labels[0] = jLabel2;
		labels[1] = jLabel3;
		labels[2] = jLabel4;
		labels[3] = jLabel5;
		labels[4] = jLabel6;
		labels[5] = jLabel7;
		labels[6] = jLabel8;
		labels[7] = jLabel9;
		labels[8] = jLabel10;
		this.setTitle("Saisie d'un texte");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLayeredPane1 = new javax.swing.JLayeredPane();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jButton8 = new javax.swing.JButton();
		jButton9 = new javax.swing.JButton();
		jButton10 = new javax.swing.JButton();
		jTextField1 = new javax.swing.JTextField();
		jButton11 = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel10 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLayeredPane1.setBackground(new java.awt.Color(204, 0, 102));
		jLayeredPane1.setForeground(new java.awt.Color(204, 0, 51));
		jLayeredPane1.setToolTipText("");
		jLayeredPane1.setOpaque(true);

		jButton1.setText("Proposition 1");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				jButton1KeyPressed(evt);
			}
		});

		jButton2.setText("Proposition 2");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton3.setText("Proposition 3");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton4.setText("Proposition 4");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jButton5.setText("Proposition 5");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});

		jButton6.setText("Proposition 6");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});

		jButton7.setText("Proposition 7");
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});

		jButton8.setText("Proposition 8");
		jButton8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton8ActionPerformed(evt);
			}
		});

		jButton9.setText("jButton9");

		jButton10.setText("TOUT EFFACER");
		jButton10.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton10ActionPerformed(evt);
			}
		});

		jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				jTextField1KeyPressed(evt);
			}
			public void keyReleased(java.awt.event.KeyEvent evt) {
				jTextField1KeyReleased(evt);
			}
		});

		jButton11.setBackground(new java.awt.Color(255, 204, 204));
		jButton11.setText("SAUVEGARDER");
		jButton11.setOpaque(false);
		jButton11.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton11ActionPerformed(evt);
			}
		});

		jLabel2.setText("Proposition 1");

		jLabel7.setText("Proposition 6");

		jLabel3.setText("Proposition 2");

		jLabel8.setText("Proposition 7");

		jLabel4.setText("Proposition 3");

		jLabel9.setText("Proposition 8");

		jLabel5.setText("Proposition 4");

		jLabel10.setText("Proposition 9");

		jLabel6.setText("Proposition 5");

		javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
		jLayeredPane1.setLayout(jLayeredPane1Layout);
		jLayeredPane1Layout.setHorizontalGroup(
				jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jLayeredPane1Layout.createSequentialGroup()
						.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jLayeredPane1Layout.createSequentialGroup()
										.addGap(10, 10, 10)
										.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(jLayeredPane1Layout.createSequentialGroup()
														.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
																		.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGap(18, 18, 18))
																				.addGroup(jLayeredPane1Layout.createSequentialGroup()
																						.addGap(13, 13, 13)
																						.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																								.addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
																								.addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
																								.addGap(18, 18, 18)))
																								.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																										.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																												.addComponent(jLabel10)
																												.addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
																												.addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
																												.addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
																												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE))
																												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
																														.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																														.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addGap(62, 62, 62)))
																														.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																																		.addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
																																		.addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																		.addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
																																		.addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
																																		.addContainerGap())
				);
		jLayeredPane1Layout.setVerticalGroup(
				jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jLayeredPane1Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jLayeredPane1Layout.createSequentialGroup()
										.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addGroup(jLayeredPane1Layout.createSequentialGroup()
														.addComponent(jButton1)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jButton2)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jButton3)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jButton4))
														.addComponent(jTextField1))
														.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(jLayeredPane1Layout.createSequentialGroup()
																		.addGap(6, 6, 6)
																		.addComponent(jButton5))
																		.addGroup(jLayeredPane1Layout.createSequentialGroup()
																				.addGap(18, 18, 18)
																				.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
																						.addComponent(jLabel2))))
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																								.addGroup(jLayeredPane1Layout.createSequentialGroup()
																										.addComponent(jButton6)
																										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(jButton7)
																										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(jButton8)
																										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(jButton10)
																										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(jButton11))
																										.addGroup(jLayeredPane1Layout.createSequentialGroup()
																												.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																														.addComponent(jLabel8)
																														.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
																														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																														.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																																.addComponent(jLabel9)
																																.addComponent(jLabel4))
																																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																.addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																																		.addComponent(jLabel5)
																																		.addComponent(jLabel10))
																																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																																		.addComponent(jLabel6)
																																		.addGap(32, 32, 32)
																																		.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
																																		.addComponent(jButton9))
																																		.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		jLayeredPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton9, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton10, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jButton11, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
		jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLayeredPane1)
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLayeredPane1)
				);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

		int n = evt.getKeyCode(); // caractère tapé

		char c = evt.getKeyChar(); // code de la touche du clavier tapée

		// Si on n'a pas tapé les touches pour faire des majuscules (MAJ ou SHIFT dont les codes sont 16 et 20) on fait quelque chose
		// Sinon on ne fait rien
		if (n != 16 && n != 20) {

			if (KeyEvent.VK_BACK_SPACE != c) { // Si on n'a pas entré la touche BACKSPACE...

				// Si le mot est en cours de saisie et qu'on a PAS entré un espace, on essaie de compléter
				// le mot; sinon, on fait appelle à la prédiction du mot suivant
				if (c == ' ') {

					for (int i = 0; i < 9; i++) {
						tabBoutons[i].setText("Proposition " + (i + 1));
						labels[i].setText("Proposition " + (i + 1));
					}

					motsEntres.add(mot);// on ajoute le mot entré à la liste de mots                     
					mot = "";// on réinitialise le mot en cours de saisie                    
					// PREDICTION DU MOT SUIVANT
					//si on commence par un espace on fait rien
					if(motsEntres.get(0)=="" && motsEntres.size() == 1 ) {}
					//si on commence par un mot qui n'est pas un espace
					else if (motsEntres.size() == 1) {
							System.out.println("Entré dans le if size = 1"+ motsEntres.get(0)+"voila"+motsEntres.size());
							//on crée un tableau de String avec seulement le premier mot
							String[] motsEntres2 = {motsEntres.get(0)};
							//on utilise la fonction motsSuivant de la classe bigramme avec comme paramètre le tableau qui contient un élément
							ArrayList<String> b = bigramme.motsSuivants(motsEntres2);
							// on applique la fonction setPropositionsMotsSuivants sur la liste b
							setPropositionsMotsSuivants(b);
						}
						// si on a entré plus d'un mot
						else{
							//on construit un tableau de string avec les deux derniers mots entrés
							String[] motsEntres2 = {motsEntres.get(motsEntres.size()-2),motsEntres.get(motsEntres.size()-1)};
							//on utilise la fonction motsSuivants de la classe Trigramme 
							ArrayList<String> t = trigramme.motsSuivants(motsEntres2);
							for(int i=0; i<t.size(); i++){
								System.out.println("t: non final" +t.get(i));
								}
								//si il y a un moins de proposition dans le trigramme que de proposition à donné
							if(t.size()<bigramme.nombreDeMotsSuivants){
								String[] motsEntres3 = {motsEntres.get(motsEntres.size()-1)};
								//on utilise la fonction bigramme juste sur le derrnier mot pour le nombre de propositions qui reste
								ArrayList<String> b = bigramme.motsSuivants(motsEntres3);
								for(int i=0; i<b.size(); i++){
									System.out.println("b:" +b.get(i));
									}
								for(int i=0; i<b.size(); i++){
									//on ajoute à la liste du trigramme les élèment du bigramme
									t.add(b.get(i));
								}
								for(int i=0; i<t.size(); i++){
									System.out.println("t: final" +t.get(i));
									}

								//on applique la fonction setPropositionsMotsSuivants sur la liste t
								setPropositionsMotsSuivants(t);

							}else{
								setPropositionsMotsSuivants(t);}
						}
					

				} else {
					// On concatène le caractère tapé au mot en cours de saisie
					mot += c;

					// COMPLETION DU MOT:                    
					setPropositionsCompletion(mot);
				}
			} else { // Si on a tapé la touche BACKSPACE
				System.out.println("motEntres:");
				for (String motentre : motsEntres) {
					System.out.println(motentre);
				}
				if (!mot.isEmpty()) {
					// Si le mot en cours de saisi a encore des caractères on supprime le dernier caractère de mot                    
					mot = mot.substring(0, mot.length() - 1);
					// et on applique la fonction de complétion au au nouveau mot obtenu 
					setPropositionsCompletion(mot);
				} // Si le mot encoure de saisie est vide...
				else {
					// Si l'utilisateur a supprimé un espace la derinère fois qu'il a appuyé sur BACKSPACE
					if (espaceSupprime) {
						if (!motsEntres.isEmpty()) {
							// On récupère le dernier mot entré
							mot = motsEntres.get(motsEntres.size() - 1);
							// on supprime la dernière lettre du dernier mot entré
							mot = mot.substring(0, mot.length() - 1);
							// On supprime le dernier mot entré dans la liste de mots entrés
							motsEntres.remove(motsEntres.size() - 1);
							// on réinitialise le boolean 
							espaceSupprime = false;
							//on applique la fonction de complétion au mot obtenu (le dernier mot - la dernière lettre du mot)
							setPropositionsCompletion(mot);
						} else {
							System.out.println("pas de mot déjà entré");
						}
					} // Si l'utilisateur supprime un espace au moment où il appuie sur la touche BACKSPACE
					else {
						espaceSupprime = true;
					}
				}
			}
		}
	}//GEN-LAST:event_jTextField1KeyPressed

        
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton2.getText());
		mot = jButton2.getText();
	}//GEN-LAST:event_jButton2ActionPerformed

	private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed

	}//GEN-LAST:event_jButton1KeyPressed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton1.getText());
		mot = jButton1.getText();
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton7.getText());
		mot = jButton7.getText();

	}//GEN-LAST:event_jButton7ActionPerformed

	private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton8.getText());
		mot = jButton8.getText();
	}//GEN-LAST:event_jButton8ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton3.getText());
		mot = jButton3.getText();
	}//GEN-LAST:event_jButton3ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton4.getText());
		mot = jButton4.getText();
	}//GEN-LAST:event_jButton4ActionPerformed

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton5.getText());
		mot = jButton5.getText();
	}//GEN-LAST:event_jButton5ActionPerformed

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
		String texte = jTextField1.getText();
		String texte1 = texte.substring(0, jTextField1.getText().length() - mot.length());
		jTextField1.setText(texte1 + jButton6.getText());
		mot = jButton6.getText();
	}//GEN-LAST:event_jButton6ActionPerformed

	private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
		// ACTION "TOUT EFFACER": On réinitialise tout
		motsEntres = new ArrayList<String>();
		mot = "";
		jTextField1.setText("");
		jLabel1.setText("");
		for (int i = 0; i < 9; i++) {
			tabBoutons[i].setText("Proposition " + (i + 1));
			labels[i].setText("Proposition " + (i + 1));
		}
	}//GEN-LAST:event_jButton10ActionPerformed

	private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

		//ACTION "SAUVEGARDE" DU TEXTE SAISI     
		FileWriter fw = null;
		BufferedWriter bw = null;
		try {
			fw = new FileWriter("corpusSMS.txt", true);
			bw = new BufferedWriter(fw);
			// On écrit dans le fichier texte CorpusSMS.txt les mots stockés dans la liste motEntres
			if (!jTextField1.getText().isEmpty()) {
				bw.newLine();
				bw.write(jTextField1.getText());
				jLabel1.setText("Sauvegarde réussie");
				bw.close();
				fw.close();
			} else {
				System.out.println("Aucun mot n'a été entré");
			}
		} catch (IOException ex) {
			Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
		}


	}//GEN-LAST:event_jButton11ActionPerformed

	private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

	}//GEN-LAST:event_jTextField1KeyReleased

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {

		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new JFrame().setVisible(true);
				} catch (IOException ex) {
					Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
				}
			}
		});
	}

	/**
	 * Fonction qui affiche les propositions de complétions sur les boutons et
	 * les labels à partir du mot en cours de saisie
	 *
	 * @param motSaisi
	 */
	public void setPropositionsCompletion(String motSaisi) {
		// On crée une liste de mots complétés à partir du mot en cours de saisie
		ListeMots liste = notreArbre.listeTriéesDeMotsApartirDunDebutDeMot(motSaisi);

		// Si la liste est non vide, on la parcourt pour afficher les 10 propositions sur les boutons et les labels   
		if (!liste.isEmpty()) {

			int compt = 0;

			for (Mot mot : liste) {
				if (compt < 9) {
					// On affiche sur le bouton la proposition
					tabBoutons[compt].setText(mot.getMot());
					// On affiche sur les labels les propositions et la donnée de la fréquence
					labels[compt].setText(mot.getMot() + " " + mot.getFrequence());
				}
				compt++;
			}
		} else {
			System.out.println("Liste VIDE");
		}
	}
        
        /**
         * Fonctions qui affiche les propositions de mots suivants sur les boutons à partir de la liste 
         * des mots suivant 
         * @param liste 
         */
	public void setPropositionsMotsSuivants(ArrayList<String> liste) {

		// Si la liste est non vide, on la parcourt pour afficher les 10 propositions sur les boutons et les labels   
		if (!liste.isEmpty()) {

			int compt = 0;

			for (String mot : liste) {
				if (compt < 9) {
					// On affiche sur le bouton la proposition
					tabBoutons[compt].setText(mot);
				}
				compt++;
			}
		} else {
			System.out.println("Liste VIDE");
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton10;
	private javax.swing.JButton jButton11;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JButton jButton9;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JLayeredPane jLayeredPane1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

}
